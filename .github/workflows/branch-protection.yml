name: Branch Protection Check

on:
  pull_request:
    branches:
      - main
      - develop
      - "feat/**"

jobs:
  branch-naming-check:
    name: Branch Naming Convention Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Check branch naming convention
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          echo "Checking branch name: $BRANCH_NAME"

          # feat/, fix/, hotfix/, release/, chore/ 등의 패턴 허용
          if [[ $BRANCH_NAME =~ ^(feat|fix|hotfix|release|chore)\/[a-z0-9\-_\/]+$ ]]; then
            echo "✅ Branch name follows naming convention"
          else
            echo "❌ Branch name does not follow naming convention"
            echo "Expected format: feat/feature-name, fix/bug-name, etc."
            exit 1
          fi

  pr-title-check:
    name: PR Title Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Check PR title format
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "Checking PR title: $PR_TITLE"

          # Conventional Commits 형식 체크
          if [[ $PR_TITLE =~ ^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?: .+ ]]; then
            echo "✅ PR title follows conventional commits format"
          else
            echo "❌ PR title does not follow conventional commits format"
            echo "Expected format: feat: add new feature, fix: resolve bug, etc."
            exit 1
          fi

  commit-message-check:
    name: Commit Message Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install commitlint
        run: |
          npm install -g @commitlint/cli @commitlint/config-conventional

      - name: Validate commit messages
        run: |
          # PR의 모든 커밋 메시지 검사
          git log --format=%s ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | while read message; do
            echo "Checking commit: $message"
            echo "$message" | npx commitlint
          done
