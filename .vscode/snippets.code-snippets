{
  "React Arrow Function Component": {
    "prefix": "rafce",
    "body": [
      "import type { JSX } from 'react';",
      "",
      "const ${1:${TM_FILENAME_BASE}} = (): JSX.Element => {",
      "  return (",
      "    <div>",
      "      $2",
      "    </div>",
      "  );",
      "};",
      "",
      "export default ${1:${TM_FILENAME_BASE}};",
    ],
    "description": "React Arrow Function Component with JSX.Element return type",
  },
  "React Arrow Function Component with Props": {
    "prefix": "rafcep",
    "body": [
      "import type { JSX } from 'react';",
      "",
      "interface ${1:${TM_FILENAME_BASE}}Props {",
      "  $2",
      "}",
      "",
      "const ${1:${TM_FILENAME_BASE}} = ({ $3 }: ${1:${TM_FILENAME_BASE}}Props): JSX.Element => {",
      "  return (",
      "    <div>",
      "      $4",
      "    </div>",
      "  );",
      "};",
      "",
      "export default ${1:${TM_FILENAME_BASE}};",
    ],
    "description": "React Arrow Function Component with Props and JSX.Element return type",
  },
  "React Functional Component": {
    "prefix": "rfc",
    "body": [
      "import type { JSX } from 'react';",
      "",
      "function ${1:${TM_FILENAME_BASE}}(): JSX.Element {",
      "  return (",
      "    <div>",
      "      $2",
      "    </div>",
      "  );",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};",
    ],
    "description": "React Functional Component with JSX.Element return type",
  },
  "React Hook": {
    "prefix": "rhook",
    "body": [
      "import { useState } from 'react';",
      "",
      "const use${1:Hook} = (): ${2:ReturnType} => {",
      "  const [${3:state}, set${3/(.*)/${3:/capitalize}/}] = useState${4:<StateType>}(${5:initialValue});",
      "",
      "  $6",
      "",
      "  return {",
      "    ${3:state},",
      "    set${3/(.*)/${3:/capitalize}/},$7",
      "  };",
      "};",
      "",
      "export default use${1:Hook};",
    ],
    "description": "Custom React Hook with TypeScript",
  },
}
